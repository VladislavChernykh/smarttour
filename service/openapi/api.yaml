openapi: 3.0.0

info:
  title: SmartTour Service API
  description: API description.
  version: 1.0.0

servers:
  - url: 'https://yourtrip.qbank.pro/api'
    description: Common host.
  - url: 'http://localhost:80/api'
    description: Local-dev backend.

paths:
  /locations/all:
    get:
      tags: [ locations ]
      summary: Location information.

      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /locations/cities:
    get:
      tags: [ locations ]
      summary: All cities.

      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /locations/get_by_params:
    post:
      tags: [ locations ]
      summary: Location filtration by parameters.
      requestBody:
        description: Filter parameters.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                budget:
                  type: array
                  items:
                    type: integer
                date:
                  type: string
                categories:
                  type: array
                  items:
                    type: string
                tags:
                  type: array
                  items:
                    type: string

            example:
              budget: [2000, 3000]
              date: "2021-06-20"

      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /categories/all:
    get:
      tags: [ categories ]
      summary: Categories information.

      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /categories/{category}/tags:
    get:
      tags: [ categories ]
      summary: All category tags.
      parameters:
        - name: category
          in: path
          required: true
          description: Category name (english)
          schema:
            type: string
          example: "mountains"

      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /trips/pack:
    post:
      tags: [ trips ]
      summary: Pack a trip.
      requestBody:
        description: Filter parameters.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                budget:
                  type: array
                  items:
                    type: integer
                date:
                  type: string
                categories:
                  type: array
                  items:
                    type: string
                tags:
                  type: array
                  items:
                    type: string

      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /trips/pack/random:
    get:
      tags: [ trips ]
      summary: Pack a random trip.

      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object

  /users/all:
    get:
      tags: [ users ]
      summary: Get all user's information.

      responses:
        '200':
          description: Ok.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
